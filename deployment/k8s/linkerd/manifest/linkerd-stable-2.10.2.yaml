---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ "authentication.k8s.io" ]
    resources: [ "tokenreviews" ]
    verbs: [ "create" ]
  - apiGroups: [ "apps" ]
    resources: [ "deployments" ]
    verbs: [ "get" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "create", "patch" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Controller RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ "extensions", "apps" ]
    resources: [ "daemonsets", "deployments", "replicasets", "statefulsets" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "extensions", "batch" ]
    resources: [ "cronjobs", "jobs" ]
    verbs: [ "list" , "get", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "pods", "endpoints", "services", "replicationcontrollers", "namespaces" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "linkerd.io" ]
    resources: [ "serviceprofiles" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "split.smi-spec.io" ]
    resources: [ "trafficsplits" ]
    verbs: [ "list", "get", "watch" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-controller
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-controller
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ "apps" ]
    resources: [ "replicasets" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "pods", "endpoints", "services", "nodes", "namespaces" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "linkerd.io" ]
    resources: [ "serviceprofiles" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "split.smi-spec.io" ]
    resources: [ "trafficsplits" ]
    verbs: [ "list", "get", "watch" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "get" ]
    resourceNames: [ "linkerd-config" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "list" ]
  - apiGroups: [ "linkerd.io" ]
    resources: [ "serviceprofiles" ]
    verbs: [ "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Service Profile CRD
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serviceprofiles.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: linkerd.io
  versions:
    - name: v1alpha1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              description: Spec is the custom resource spec
              required:
                - routes
              properties:
                dstOverrides:
                  type: array
                  required:
                    - authority
                    - weight
                  items:
                    type: object
                    description: WeightedDst is a weighted alternate destination.
                    properties:
                      authority:
                        type: string
                      weight:
                        x-kubernetes-int-or-string: true
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                opaquePorts:
                  type: array
                  items:
                    type: string
                retryBudget:
                  type: object
                  required:
                    - minRetriesPerSecond
                    - retryRatio
                    - ttl
                  description: RetryBudget describes the maximum number of retries that should be issued to this service.
                  properties:
                    minRetriesPerSecond:
                      format: int32
                      type: integer
                    retryRatio:
                      type: number
                      format: float
                    ttl:
                      type: string
                routes:
                  type: array
                  items:
                    type: object
                    description: RouteSpec specifies a Route resource.
                    required:
                      - condition
                      - name
                    properties:
                      condition:
                        type: object
                        description: RequestMatch describes the conditions under which to match a Route.
                        properties:
                          pathRegex:
                            type: string
                          method:
                            type: string
                          all:
                            type: array
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          any:
                            type: array
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          not:
                            type: array
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                      isRetryable:
                        type: boolean
                      name:
                        type: string
                      timeout:
                        type: string
                      responseClasses:
                        type: array
                        items:
                          type: object
                          required:
                            - condition
                          description: ResponseClass describes how to classify a response (e.g. success or failures).
                          properties:
                            condition:
                              type: object
                              description: ResponseMatch describes the conditions under
                                which to classify a response.
                              properties:
                                all:
                                  type: array
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                any:
                                  type: array
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                not:
                                  type: array
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                status:
                                  type: object
                                  description: Range describes a range of integers (e.g. status codes).
                                  properties:
                                    max:
                                      format: int32
                                      type: integer
                                    min:
                                      format: int32
                                      type: integer
                            isFailure:
                              type: boolean
    - name: v1alpha2
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              description: Spec is the custom resource spec
              required:
                - routes
              properties:
                dstOverrides:
                  type: array
                  required:
                    - authority
                    - weight
                  items:
                    type: object
                    description: WeightedDst is a weighted alternate destination.
                    properties:
                      authority:
                        type: string
                      weight:
                        x-kubernetes-int-or-string: true
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                opaquePorts:
                  type: array
                  items:
                    type: string
                retryBudget:
                  type: object
                  required:
                    - minRetriesPerSecond
                    - retryRatio
                    - ttl
                  description: RetryBudget describes the maximum number of retries that should be issued to this service.
                  properties:
                    minRetriesPerSecond:
                      format: int32
                      type: integer
                    retryRatio:
                      type: number
                      format: float
                    ttl:
                      type: string
                routes:
                  type: array
                  items:
                    type: object
                    description: RouteSpec specifies a Route resource.
                    required:
                      - condition
                      - name
                    properties:
                      condition:
                        type: object
                        description: RequestMatch describes the conditions under which to match a Route.
                        properties:
                          pathRegex:
                            type: string
                          method:
                            type: string
                          all:
                            type: array
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          any:
                            type: array
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          not:
                            type: array
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                      isRetryable:
                        type: boolean
                      name:
                        type: string
                      timeout:
                        type: string
                      responseClasses:
                        type: array
                        items:
                          type: object
                          required:
                            - condition
                          description: ResponseClass describes how to classify a response (e.g. success or failures).
                          properties:
                            condition:
                              type: object
                              description: ResponseMatch describes the conditions under
                                which to classify a response.
                              properties:
                                all:
                                  type: array
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                any:
                                  type: array
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                not:
                                  type: array
                                  items:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                status:
                                  type: object
                                  description: Range describes a range of integers (e.g. status codes).
                                  properties:
                                    max:
                                      format: int32
                                      type: integer
                                    min:
                                      format: int32
                                      type: integer
                            isFailure:
                              type: boolean
  scope: Namespaced
  preserveUnknownFields: false
  names:
    plural: serviceprofiles
    singular: serviceprofile
    kind: ServiceProfile
    shortNames:
      - sp
---
###
### TrafficSplit CRD
### Copied from github.com/servicemeshinterface/smi-sdk-go/blob/d4e76b1cd7a33ead5f38d1262dd838a31c80f4e5/crds/split.yaml
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: trafficsplits.split.smi-spec.io
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: split.smi-spec.io
  scope: Namespaced
  conversion:
    strategy: None
  names:
    kind: TrafficSplit
    listKind: TrafficSplitList
    shortNames:
      - ts
    plural: trafficsplits
    singular: trafficsplit
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - service
                - backends
              properties:
                service:
                  description: The apex service of this split.
                  type: string
                backends:
                  description: The backend services of this split.
                  type: array
                  items:
                    type: object
                    required: [ 'service', 'weight' ]
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        x-kubernetes-int-or-string: true
      additionalPrinterColumns:
        - name: Service
          type: string
          description: The apex service of this split.
          jsonPath: .spec.service
    - name: v1alpha2
      served: true
      storage: false
      additionalPrinterColumns:
        - name: Service
          type: string
          description: The apex service of this split.
          jsonPath: .spec.service
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - service
                - backends
              properties:
                service:
                  description: The apex service of this split.
                  type: string
                backends:
                  description: The backend services of this split.
                  type: array
                  items:
                    type: object
                    required: [ 'service', 'weight' ]
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        type: number
  preserveUnknownFields: false
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "create", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "namespaces", "replicationcontrollers" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "list", "watch" ]
  - apiGroups: [ "extensions", "apps" ]
    resources: [ "deployments", "replicasets", "daemonsets", "statefulsets" ]
    verbs: [ "list", "get", "watch" ]
  - apiGroups: [ "extensions", "batch" ]
    resources: [ "cronjobs", "jobs" ]
    verbs: [ "list", "get", "watch" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRTFQd29MOEJwN3ZZMWhveWZvY2djREFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl4TURZd09EQXdNRFkxTTFvWERUSXlNRFl3T0RBd01EWTFNMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFLN3oydWlYdTJ1bTV1SGxZRjhGM3IrclBvN0NBYThoOVdudkZJeE1oRlN2dm1lbQpBOXcvbThMOGJIOHJQWlFTL2taWU9qeVVZVnNVdTZrNEVVVnlyTXZPNW4yaXUvQ1pObEpTOHVNQUUvN3FlVzBxCnNRSUJjVW1rb1psczliRVk4RXE0OWxpR090blE2WHhHS3NVZFg0RVQveDlneDZkcDdDNlpNTytqd3ZKT09CbEoKOGNBUkwzb2dlU0MwUUtUWEJXRGQ5cW5jWUJxRThOVDVWZ0VwakRFNVFKTS8veDBqQnprb2RCd0ViaWsrbGZqWQpMd2NBL1BnekUrT0hoTFphdTNLZ1kvVUlrVzFkUnZ0WmJUbmhrTXI5c2xaTVJFdUUrelJMT1ZOeEhyQ3h6MkVGCnpEenFSYUFhZGVaOStWN2RJK0xTK2g5d2Y3UG9aejlOamJmZmNWc0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS0lWUFlUOVo5b1lrZ1VMQnBWWi9oNzVnOExvaGZUeEJXU0sKZGhLd1U4dXpwRHhPUGtaR2tINjJFa3hablE2QUVZUjRMMyt6VGc0eVNuWlNKS1lGQ3AwbzFNYVBQVE1JcHZyZQpOZ2VKVzhEdEptOGgwNWRUYnRhZDZkbkNhL3J0TGFqblVMWHA5UVpUYXVKRmlqNWJ4blcyWFVLSHVROTNIVHlqCk5zaXVTSjBnbHNPa3BOZ1FMK3RpUVRKakZ6akNhbHpGN25qQk5jTTc5UGJxOFZ3V09ZRldjYkxjY3ZOTFNPZDEKK2pnaldSK3YvV0I4MjBwWkt0aUY3NEFuVlJqTlFmTnBUYVYzQjQ3cndKYXRHSVowT0JpajNTQUFuMVVtRjQyQQpEVFpwbXEwNGNWdk1YVlR6REpFYWdSYmE0YVRyeVVPU010MFltNjRiMGlNYWwvWGd2WHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcnZQYTZKZTdhNmJtNGVWZ1h3WGV2NnMranNJQnJ5SDFhZThVakV5RVZLKytaNllECjNEK2J3dnhzZnlzOWxCTCtSbGc2UEpSaFd4UzdxVGdSUlhLc3k4N21mYUs3OEprMlVsTHk0d0FUL3VwNWJTcXgKQWdGeFNhU2htV3oxc1Jqd1NyajJXSVk2MmREcGZFWXF4UjFmZ1JQL0gyREhwMm5zTHBrdzc2UEM4azQ0R1VueAp3QkV2ZWlCNUlMUkFwTmNGWU4zMnFkeGdHb1R3MVBsV0FTbU1NVGxBa3ovL0hTTUhPU2gwSEFSdUtUNlYrTmd2CkJ3RDgrRE1UNDRlRXRscTdjcUJqOVFpUmJWMUcrMWx0T2VHUXl2MnlWa3hFUzRUN05FczVVM0Vlc0xIUFlRWE0KUE9wRm9CcDE1bjM1WHQwajR0TDZIM0IvcytoblAwMk50OTl4V3dJREFRQUJBb0lCQUdYTUJDTDBMcHhyNThtbgpBcFVud0QwOE1kRTA5Mi9relh4UEhXQ3BJUko1azh1UllJdW1BMGJJUTRVWEx1UmF6Tk0zZ09OQTN3ajFIbUJPCi9GV3hiUFBGdG4yQjArTWg4dWFoMXl2WUhzcGp1aldYOHBpZEtFTFdaU1Qxcmx2V2kvS2VmdEJ4Z2dxOU1TNGIKVWNXUjJzRXJWblgyaFJWWFg1S1psa3pKdDZQdWd1SGZjM0Z1UFhTaUZuY0k0Q0lqM0ltU2tQZ0c3TkZZajNyYwovL0Y2WDhGOHFUM3dxRVJaMkNhKzY4RGM1ZjhKbGxlYWN6Rk5IQVlQZFd0Q2xUeXRhTGNVY2VKUkJlZjR0ckg1CkFrZzFmZjI0cXo5MDUyd3duVWU4NEFYM0VISmFmM3lyeCtiMjY4azRUaU5NWmV4TTJiZmllcXRqWDJPV0hqeDIKZjNNQ0pORUNnWUVBeTErTGQvS1RnSnlIbzcwaFQ0UmJGRHd6d0dwemhWd0lQcmtiSHd5VzRkWTR0WE9jem1YSwpEOEw5TG9tRjAwU1RyUlRCaE1XSDcxTTgvZi9xeGRqaVlGRUxRUU1TZDFobXBwa1I2UEIyMERlTjlXNmFodnEvCjhkbTk0S2pQS3J4MEl0clJVRUNsNFJURjFFRDhQY1ljZVlzekVUeHNMYi9IaTNrWCszU3FJZ01DZ1lFQTNEbVYKZy9zZDhkOVRUWUtSTlc5aElZc2t0cUUxMXo2ZlJ3QlZXQ0xmYXVVbzgvRVV3akhBVHZyQjBtZ0FYSTIwcXh0VgpoRXNmNTVRZFAzazByQVRkempBYjhvc2xwcWpNN3FGSzlYL0tOdlVteU1EV0lHeUs0NXZpcDRrMmg2bzlkYzE0CjJ4dkg0Y3RRbTVTUEJoT2FCRHhhak9oN001aWRoc2srMTlLa1A4a0NnWUJabmVXb1duVlRGQ2JWS1U5WGFkeDAKb3o2dXlIblZSME8rMS9TeWp1cWg0N01qaWltTDdlREhaMFlIenNQdzMrUXZQZGswdDVKNkRIVHcvR2VvL1RScgordXA1b0cvdnRUMnVwZjcxWlprRmthVjFoR0tGbmxNY3NMVnlIUkVGSlB3TUs5NVdmZFphdzd1VkYzblBndEFqCll3cUN5dHhrb0lDKzNnS0taTk5mbndLQmdGZnZvblU5KzVvT085d3lhN3N6aTB4eW5DbFV2QVFEM0dQa2pTK1IKVlRjQTVGWnNDSWIyaUx6QXdrNDYreEg1LzQ5bmJjRlNvaDI5ZGVSWGlLRzdtN251V2VxQ2gzbEI0L3JSYXZZVwpuZTlOK3J1a3pKdkwyN1hCRkVNanRpTjc1ZWk1TUM0RnJNM0xlcGQxUFpzR2pyUnNTUmdFNk5VVWRxcFFoNGgwCmN1T0pBb0dCQUtFTFNOZ3Z6cUZnVVVraTBZanJKZ1NsVDBjTFVKSk9sOS9VSFN0dmhNRGtvdmJmVUV3alo5V0sKamVEdU90UncvTFRhM1RhaTBBc1p6MnduOE45Z3FvS2F1WUxJSlBXVzRHbEZ2T3VpN2lmWmo4eFFUSDhjQ1VXUApHZU9RRVpWa3FFSWJGZ0dmd3c3ZDNiSEhOUTNxMUN0UDAzVE02Q0FjQTRVMGt2dFdvbEJKCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-proxy-injector.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-proxy-injector
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRTFQd29MOEJwN3ZZMWhveWZvY2djREFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl4TURZd09EQXdNRFkxTTFvWERUSXlNRFl3T0RBd01EWTFNMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFLN3oydWlYdTJ1bTV1SGxZRjhGM3IrclBvN0NBYThoOVdudkZJeE1oRlN2dm1lbQpBOXcvbThMOGJIOHJQWlFTL2taWU9qeVVZVnNVdTZrNEVVVnlyTXZPNW4yaXUvQ1pObEpTOHVNQUUvN3FlVzBxCnNRSUJjVW1rb1psczliRVk4RXE0OWxpR090blE2WHhHS3NVZFg0RVQveDlneDZkcDdDNlpNTytqd3ZKT09CbEoKOGNBUkwzb2dlU0MwUUtUWEJXRGQ5cW5jWUJxRThOVDVWZ0VwakRFNVFKTS8veDBqQnprb2RCd0ViaWsrbGZqWQpMd2NBL1BnekUrT0hoTFphdTNLZ1kvVUlrVzFkUnZ0WmJUbmhrTXI5c2xaTVJFdUUrelJMT1ZOeEhyQ3h6MkVGCnpEenFSYUFhZGVaOStWN2RJK0xTK2g5d2Y3UG9aejlOamJmZmNWc0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS0lWUFlUOVo5b1lrZ1VMQnBWWi9oNzVnOExvaGZUeEJXU0sKZGhLd1U4dXpwRHhPUGtaR2tINjJFa3hablE2QUVZUjRMMyt6VGc0eVNuWlNKS1lGQ3AwbzFNYVBQVE1JcHZyZQpOZ2VKVzhEdEptOGgwNWRUYnRhZDZkbkNhL3J0TGFqblVMWHA5UVpUYXVKRmlqNWJ4blcyWFVLSHVROTNIVHlqCk5zaXVTSjBnbHNPa3BOZ1FMK3RpUVRKakZ6akNhbHpGN25qQk5jTTc5UGJxOFZ3V09ZRldjYkxjY3ZOTFNPZDEKK2pnaldSK3YvV0I4MjBwWkt0aUY3NEFuVlJqTlFmTnBUYVYzQjQ3cndKYXRHSVowT0JpajNTQUFuMVVtRjQyQQpEVFpwbXEwNGNWdk1YVlR6REpFYWdSYmE0YVRyeVVPU010MFltNjRiMGlNYWwvWGd2WHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
    failurePolicy: Ignore
    admissionReviewVersions: [ "v1", "v1beta1" ]
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [ "" ]
        apiVersions: [ "v1" ]
        resources: [ "pods", "services" ]
    sideEffects: None
---
###
### Service Profile Validator RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "list" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
subjects:
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-sp-validator
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpOLzZHM3dieVF6Yjg5K0txVldSYTR3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakV3TmpBNE1EQXdOalV6V2hjTk1qSXdOakE0TURBd05qVXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUo0YjJlOUoxWC9kazJiWm5ZWlRCWDljc1lBMVc3Smk3c0MvUm1vWG4rTTVocy81TFgwQgpnUTl3U2hPSDB5RjFVZkdpYjZzZjFUM2FnMEhDLzlRYnRpSi9jR1F1SThGRVA3ZVVOY1dHSkxlNHBGRmVUeHhKCngrWGl1bGNhT24wU2prNlRjVXY4OE1HdE5BdkM2aUhFOHZoOVdzK0c1MzNiTkdmak5lOHZIZEowYXo5dkVDN1UKTXhZRmkvVWs0bVJleWRQdUt1blFiN2puSUo4RkFBQXJRUndRd1V2VFFJbisxaWVEd1BGRmtHanpVZzhEbitiYQoyTnBueXhzRnFqT0dZbmJrS1JjSWVYV3I1SzNmSGx2Q0l6V3JhQUlBVUtZc0p4UWk0d1BHQ2x5cUNCOXFVVWRTCmJ4eisvaGM4YU9GVWFkT3ZkUVNya2IzVFVQaXZUaEtqNThjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCNTIzaTBhUzAzV1Z0OEt1L3VUL1RMUUJTa1hhZnVaQ0dJOGRPSFVvNWsKamhaV1J0RlkzK2p2OFJ6bEhjU3IvR29RVzhncGJuY2p2ejNtMHdqUVg2aFVSVjJuRDcrZUxDN2xJU0FGR2NqTgpTOG1WR0hkNnQ1RFRlSXdnRENiZXZXN3BXOWMvR1R5YmRHRE1wb2ZwUjBlcE1pQ1pwNFVtRm8zbHdTcTN0bFRBCkRnc244NXFDUEU0d00rYTkxWUtyVE5JYmI5ZU44VGZNcEoxTy95QXllcWt4V1RvMEVKNDNwdUkvb081ZUI0ZzcKYnBCOVpKdGh1NURLUHhsL0RKM0gyRlU5cXplN1JPZW5QaWVpcFhlWXdrSWJxZjhnZlVjWXhDMjhaSkNONzRycQoxK2hTS3ZjY1kvK0RjZkVzVzgrazJ5Q2tqdkxJYmdMNWhobnVkc0dUWW9GcQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbmh2WjcwblZmOTJUWnRtZGhsTUZmMXl4Z0RWYnNtTHV3TDlHYWhlZjR6bUd6L2t0CmZRR0JEM0JLRTRmVElYVlI4YUp2cXgvVlBkcURRY0wvMUJ1MkluOXdaQzRqd1VRL3Q1UTF4WVlrdDdpa1VWNVAKSEVuSDVlSzZWeG82ZlJLT1RwTnhTL3p3d2EwMEM4THFJY1R5K0gxYXo0Ym5mZHMwWitNMTd5OGQwblJyUDI4UQpMdFF6RmdXTDlTVGlaRjdKMCs0cTZkQnZ1T2NnbndVQUFDdEJIQkRCUzlOQWlmN1dKNFBBOFVXUWFQTlNEd09mCjV0clkybWZMR3dXcU00WmlkdVFwRndoNWRhdmtyZDhlVzhJak5hdG9BZ0JRcGl3bkZDTGpBOFlLWEtvSUgycFIKUjFKdkhQNytGenhvNFZScDA2OTFCS3VSdmROUStLOU9FcVBueHdJREFRQUJBb0lCQUJkaWJTaE1Ga3kwRytJQgpXNkFMVld2UjdOcldpWHBuMFlJbWlDYVcyZW9FanlEaGJNM3BWQXBSaEZOQktvUHZVekJXNHdjL1RRMjU3T0hrCkVteHZzTStIWTdzZGErSmcwciszSndEUTUwdFkvc3llRXp0TzJrYnc4cmlCUTVkT0VFZ2szSVB0cERveEFOcWcKZUhxSUk1dUhCdEJjMW80eHhwMTY2SFk0MU1OVWd5V1MyYzUvWlFhUmMwN1puWnU4VDd2QzRSSFN3REdpQ3pvSworWE9RVnlBMEJSV3NVOUFBSlBhaHFEZkZKTU05cmN5eStlTWZVL29mVlVLTzRabkJDTXEwczZNVjNpVWlvNjRBCjJsanUxV0Nyc3NSYk1paFhrZ1dvaGNGdUhIZEtTRUVVYjIydVdJRHZLbjZQVTNpRnBuSUhQS0tPemdoWFhEL2kKRUdDWHBIa0NnWUVBelpFWHpyZlIvaHUzdFl6cFg4VEpuWkFIeEQ2ZzVxQkpJcDM0MEdxY0xWVnJZMVFmNW92bgpSdHJaSUF0SjA2aFRpeEp2UnpyVlNRTDdhT3JSaE1LNlZwMXVsT1l3YTF0MlNpZ2h2YUI4YVk3c0FBWnRvdXRICmI0NHRMbEJuNnoxRk9tTVVOdVU3cFhDZG1IWW4zVXdaZWhza0RUTE0rS2pXVVpnb0Z3L2xMb01DZ1lFQXhPWVkKR1BFRmNSQTJZMVBLNGVlQVlBNE8vN29xVlFmQ3duK00wZVFPclJPTTV5NExESXdoYVhWdHJTUkc0MjhpbHNiawphSkdVTFhuSjhtdXRWMTNld2RPcGk5bkJFbFA1dkRTay9jMWlxY3FqVWViZUxHOVcydFFZVWNzZFQrdFJlNlF0CnUrSFlGV21FV29SN2FoL2JmUlI5TGRPN3F0T0JaK0RTMlR3cFhtMENnWUVBeTl0M29LanF0dlVGMmlWRHlwVjgKMjZSYUQyT01iU25IWFcwTHNxUUcvVzRZY1FpY0dpWGoxWUJ5a2pTZm9pYnJzcDgxZTQzOHRjc2ZSNHlXK3ZHaAptUVBIQmlMQkliWXlPSmhUM1ptcHg0VFV4YkdhU0ZiTElQWCtHRS9rdm9Ta2dxSi9DWEdMRlNYNUk1a0pMNHlvCk4wOXpFU092NFdpT0laeWpKVHUrSzhFQ2dZQTRhZGh6cFBLekx6cjJBSGI3ZkpHYWM4eTJWa2QwcjFHTTJuQ2wKWGxzYUdhVGdRNS9reTIxelFyTFd6Yk1Gekx5elNHNyt5dDhTbkhkUTNxcitnaVdsa1JoZHVsa0lBRWxvTkFrbApzcWZYRC9qMUtWbDBqNzNwMnFUUklvbldjUXlhaVRLVlJ5TGJGNjFWSmVvYVFPQnBHT3E0cTVaMFhqOFFYU2pzCkZzR2ZqUUtCZ1FDbWd6TUwyRE1tOEE2b0hSSDFabUFYb21JQ2QwR2tNV3BZMkROdEZiR0x6OWJHU29lbEtRRkYKS2ZKcHpybmFOVzdkZCt3aWEraWlLVXEwTlBWbGR2UzJhS1g4eHVWTzVHTHNNVThWVS9GU3lwUXBidnQ3Y01qKwpSc2pNS1g1ZVNPa2pubnJ2bWJZY204TUNqaWZCZ0szOWVBSkd5MjZuckRRTkc1ZXdldjd6UUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
webhooks:
  - name: linkerd-sp-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-sp-validator
        namespace: linkerd
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpOLzZHM3dieVF6Yjg5K0txVldSYTR3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNakV3TmpBNE1EQXdOalV6V2hjTk1qSXdOakE0TURBd05qVXpXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUo0YjJlOUoxWC9kazJiWm5ZWlRCWDljc1lBMVc3Smk3c0MvUm1vWG4rTTVocy81TFgwQgpnUTl3U2hPSDB5RjFVZkdpYjZzZjFUM2FnMEhDLzlRYnRpSi9jR1F1SThGRVA3ZVVOY1dHSkxlNHBGRmVUeHhKCngrWGl1bGNhT24wU2prNlRjVXY4OE1HdE5BdkM2aUhFOHZoOVdzK0c1MzNiTkdmak5lOHZIZEowYXo5dkVDN1UKTXhZRmkvVWs0bVJleWRQdUt1blFiN2puSUo4RkFBQXJRUndRd1V2VFFJbisxaWVEd1BGRmtHanpVZzhEbitiYQoyTnBueXhzRnFqT0dZbmJrS1JjSWVYV3I1SzNmSGx2Q0l6V3JhQUlBVUtZc0p4UWk0d1BHQ2x5cUNCOXFVVWRTCmJ4eisvaGM4YU9GVWFkT3ZkUVNya2IzVFVQaXZUaEtqNThjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFCNTIzaTBhUzAzV1Z0OEt1L3VUL1RMUUJTa1hhZnVaQ0dJOGRPSFVvNWsKamhaV1J0RlkzK2p2OFJ6bEhjU3IvR29RVzhncGJuY2p2ejNtMHdqUVg2aFVSVjJuRDcrZUxDN2xJU0FGR2NqTgpTOG1WR0hkNnQ1RFRlSXdnRENiZXZXN3BXOWMvR1R5YmRHRE1wb2ZwUjBlcE1pQ1pwNFVtRm8zbHdTcTN0bFRBCkRnc244NXFDUEU0d00rYTkxWUtyVE5JYmI5ZU44VGZNcEoxTy95QXllcWt4V1RvMEVKNDNwdUkvb081ZUI0ZzcKYnBCOVpKdGh1NURLUHhsL0RKM0gyRlU5cXplN1JPZW5QaWVpcFhlWXdrSWJxZjhnZlVjWXhDMjhaSkNONzRycQoxK2hTS3ZjY1kvK0RjZkVzVzgrazJ5Q2tqdkxJYmdMNWhobnVkc0dUWW9GcQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
    failurePolicy: Ignore
    admissionReviewVersions: [ "v1", "v1beta1" ]
    rules:
      - operations: [ "CREATE" , "UPDATE" ]
        apiGroups: [ "linkerd.io" ]
        apiVersions: [ "v1alpha1", "v1alpha2" ]
        resources: [ "serviceprofiles" ]
    sideEffects: None
---
###
### Control Plane PSP
###
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: linkerd-linkerd-control-plane
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  allowedCapabilities:
    - NET_ADMIN
    - NET_RAW
  requiredDropCapabilities:
    - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  volumes:
    - configMap
    - emptyDir
    - secret
    - projected
    - downwardAPI
    - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-psp
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups: [ 'policy', 'extensions' ]
    resources: [ 'podsecuritypolicies' ]
    verbs: [ 'use' ]
    resourceNames:
      - linkerd-linkerd-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-psp
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
data:
  values: |
    cliVersion: linkerd/cli stable-2.10.2
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerImageVersion: stable-2.10.2
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.10.2
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: false
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    grafanaUrl: ""
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        crtExpiry: "2022-05-08T15:36:41Z"
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMTA1MDgxNTM2MjFaFw0yMjA1MDgxNTM2NDFaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEpOZnhrwXSVgtfgl+R5KXfbkQ3yhtGZ8a/dv0xyxzevPDxMKnDkP6ooidEIpE
            4zErthAOCiGN8PX30gnDwIU3MKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBRkDrVvNrJLsU39bnqC78uU2Kw1bDAKBggqhkjOPQQDAgNJADBGAiEAjqqaZGlH
            9mUr76y/qRH4FBg9SdLxPc5tbIjQBz5hIsoCIQCwAz7I+kfBcKQdtZucmF/Afqrv
            1MQT585MbDgYfR/d2A==
            -----END CERTIFICATE-----
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMTA1MDgxNTM2MjFaFw0yMjA1MDgxNTM2NDFaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEpOZnhrwXSVgtfgl+R5KXfbkQ3yhtGZ8a/dv0xyxzevPDxMKnDkP6ooidEIpE
      4zErthAOCiGN8PX30gnDwIU3MKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBRkDrVvNrJLsU39bnqC78uU2Kw1bDAKBggqhkjOPQQDAgNJADBGAiEAjqqaZGlH
      9mUr76y/qRH4FBg9SdLxPc5tbIjQBz5hIsoCIQCwAz7I+kfBcKQdtZucmF/Afqrv
      1MQT585MbDgYfR/d2A==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    installNamespace: true
    linkerdVersion: stable-2.10.2
    namespace: linkerd
    nodeSelector:
      beta.kubernetes.io/os: linux
    omitWebhookSideEffects: false
    podAnnotations: {}
    podLabels: {}
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      capabilities: null
      disableIdentity: false
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: stable-2.10.2
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,443,587,3306,5432,11211
      outboundConnectTimeout: 1000ms
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: ""
      ignoreOutboundPorts: ""
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v1.3.11
      resources:
        cpu:
          limit: 100m
          request: 10m
        memory:
          limit: 50Mi
          request: 10Mi
      saMountPath: null
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    publicAPIProxyResources: null
    publicAPIResources: null
    spValidatorProxyResources: null
    spValidatorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
    linkerd.io/identity-issuer-expiry: 2022-05-08T15:36:41Z
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNVEExTURneE5UTTJNakZhRncweU1qQTFNRGd4TlRNMk5ERmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVwT1puaHJ3WFNWZ3RmZ2wrUjVLWGZia1EzeWh0R1o4YS9kdjB4eXh6ZXZQRHhNS25Ea1A2b29pZEVJcEUKNHpFcnRoQU9DaUdOOFBYMzBnbkR3SVUzTUtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUmtEclZ2TnJKTHNVMzlibnFDNzh1VTJLdzFiREFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBanFxYVpHbEgKOW1Vcjc2eS9xUkg0RkJnOVNkTHhQYzV0YklqUUJ6NWhJc29DSVFDd0F6N0kra2ZCY0tRZHRadWNtRi9BZnFydgoxTVFUNTg1TWJEZ1lmUi9kMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBXWVNWeTZQeTlkeSt1MVdHOTNFOVd4OUVHWFFIYWhvOVB2Z1ZReXZvYWVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFcE9abmhyd1hTVmd0ZmdsK1I1S1hmYmtRM3lodEdaOGEvZHYweHl4emV2UER4TUtuRGtQNgpvb2lkRUlwRTR6RXJ0aEFPQ2lHTjhQWDMwZ25Ed0lVM01BPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.10.2
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.10.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.10.2
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
        - args:
            - identity
            - -log-level=info
            - -log-format=plain
            - -controller-namespace=linkerd
            - -identity-trust-domain=cluster.local
            - -identity-issuance-lifetime=24h0m0s
            - -identity-clock-skew-allowance=20s
            - -identity-scheme=linkerd.io/tls
          env:
            - name: LINKERD2_IDENTITY_TRUST_ANCHORS
              value: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNVEExTURneE5UTTJNakZhRncweU1qQTFNRGd4TlRNMk5ERmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVwT1puaHJ3WFNWZ3RmZ2wrUjVLWGZia1EzeWh0R1o4YS9kdjB4eXh6ZXZQRHhNS25Ea1A2b29pZEVJcEUKNHpFcnRoQU9DaUdOOFBYMzBnbkR3SVUzTUtOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCUmtEclZ2TnJKTHNVMzlibnFDNzh1VTJLdzFiREFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBanFxYVpHbEgKOW1Vcjc2eS9xUkg0RkJnOVNkTHhQYzV0YklqUUJ6NWhJc29DSVFDd0F6N0kra2ZCY0tRZHRadWNtRi9BZnFydgoxTVFUNTg1TWJEZ1lmUi9kMkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            - name: LINKERD_DISABLED
              value: "linkerd-await cannot block the identity controller"
          image: cr.l5d.io/linkerd/controller:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9990
            initialDelaySeconds: 10
          name: identity
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 9990
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9990
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/issuer
              name: identity-issuer
        - env:
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,443,587,3306,5432,11211"
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
                eS5saW5rZXJkLjAeFw0yMTA1MDgxNTM2MjFaFw0yMjA1MDgxNTM2NDFaMBwxGjAY
                BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
                QgAEpOZnhrwXSVgtfgl+R5KXfbkQ3yhtGZ8a/dv0xyxzevPDxMKnDkP6ooidEIpE
                4zErthAOCiGN8PX30gnDwIU3MKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
                MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
                BBRkDrVvNrJLsU39bnqC78uU2Kw1bDAKBggqhkjOPQQDAgNJADBGAiEAjqqaZGlH
                9mUr76y/qRH4FBg9SdLxPc5tbIjQBz5hIsoCIQCwAz7I+kfBcKQdtZucmF/Afqrv
                1MQT585MbDgYfR/d2A==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: localhost.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: cr.l5d.io/linkerd/proxy:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191"
            - --outbound-ports-to-ignore
            - "443"
          image: cr.l5d.io/linkerd/proxy-init:v1.3.11
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
        - name: identity-issuer
          secret:
            secretName: linkerd-identity-issuer
        - emptyDir: { }
          name: linkerd-proxy-init-xtables-lock
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Controller
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: controller
  ports:
    - name: http
      port: 8085
      targetPort: 8085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.10.2
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-controller
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-controller
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.10.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.10.2
      labels:
        linkerd.io/control-plane-component: controller
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-controller
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
        - args:
            - public-api
            - -destination-addr=linkerd-dst.linkerd.svc.cluster.local:8086
            - -controller-namespace=linkerd
            - -log-level=info
            - -log-format=plain
            - -cluster-domain=cluster.local
          image: cr.l5d.io/linkerd/controller:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: public-api
          ports:
            - containerPort: 8085
              name: http
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
        - env:
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,443,587,3306,5432,11211"
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
                eS5saW5rZXJkLjAeFw0yMTA1MDgxNTM2MjFaFw0yMjA1MDgxNTM2NDFaMBwxGjAY
                BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
                QgAEpOZnhrwXSVgtfgl+R5KXfbkQ3yhtGZ8a/dv0xyxzevPDxMKnDkP6ooidEIpE
                4zErthAOCiGN8PX30gnDwIU3MKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
                MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
                BBRkDrVvNrJLsU39bnqC78uU2Kw1bDAKBggqhkjOPQQDAgNJADBGAiEAjqqaZGlH
                9mUr76y/qRH4FBg9SdLxPc5tbIjQBz5hIsoCIQCwAz7I+kfBcKQdtZucmF/Afqrv
                1MQT585MbDgYfR/d2A==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: cr.l5d.io/linkerd/proxy:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191"
            - --outbound-ports-to-ignore
            - "443"
          image: cr.l5d.io/linkerd/proxy-init:v1.3.11
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-controller
      volumes:
        - emptyDir: { }
          name: linkerd-proxy-init-xtables-lock
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.10.2
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.10.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.10.2
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
        - args:
            - destination
            - -addr=:8086
            - -controller-namespace=linkerd
            - -enable-h2-upgrade=true
            - -log-level=info
            - -log-format=plain
            - -enable-endpoint-slices=false
            - -cluster-domain=cluster.local
            - -identity-trust-domain=cluster.local
            - -default-opaque-ports=25,443,587,3306,5432,11211
          image: cr.l5d.io/linkerd/controller:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9996
            initialDelaySeconds: 10
          name: destination
          ports:
            - containerPort: 8086
              name: grpc
            - containerPort: 9996
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9996
          securityContext:
            runAsUser: 2103
        - env:
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: localhost.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,443,587,3306,5432,11211"
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
                eS5saW5rZXJkLjAeFw0yMTA1MDgxNTM2MjFaFw0yMjA1MDgxNTM2NDFaMBwxGjAY
                BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
                QgAEpOZnhrwXSVgtfgl+R5KXfbkQ3yhtGZ8a/dv0xyxzevPDxMKnDkP6ooidEIpE
                4zErthAOCiGN8PX30gnDwIU3MKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
                MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
                BBRkDrVvNrJLsU39bnqC78uU2Kw1bDAKBggqhkjOPQQDAgNJADBGAiEAjqqaZGlH
                9mUr76y/qRH4FBg9SdLxPc5tbIjQBz5hIsoCIQCwAz7I+kfBcKQdtZucmF/Afqrv
                1MQT585MbDgYfR/d2A==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: cr.l5d.io/linkerd/proxy:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191"
            - --outbound-ports-to-ignore
            - "443"
          image: cr.l5d.io/linkerd/proxy-init:v1.3.11
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
        - emptyDir: { }
          name: linkerd-proxy-init-xtables-lock
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.10.2
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  concurrencyPolicy: Replace
  schedule: "16 00 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.10.2
        spec:
          nodeSelector:
            beta.kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
            - name: heartbeat
              image: cr.l5d.io/linkerd/controller:stable-2.10.2
              imagePullPolicy: IfNotPresent
              env:
                - name: LINKERD_DISABLED
                  value: "the heartbeat controller does not use the proxy"
              args:
                - "heartbeat"
                - "-controller-namespace=linkerd"
                - "-log-level=info"
                - "-log-format=plain"
                - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
              securityContext:
                runAsUser: 2103
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.10.2
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      annotations:
        checksum/config: 95a8306e5dd110f3c55bd0a808165f5a25c019db1d62456c0df58f5008ed3033
        linkerd.io/created-by: linkerd/cli stable-2.10.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.10.2
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
        - args:
            - proxy-injector
            - -log-level=info
            - -log-format=plain
          image: cr.l5d.io/linkerd/controller:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: proxy-injector
          ports:
            - containerPort: 8443
              name: proxy-injector
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,443,587,3306,5432,11211"
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
                eS5saW5rZXJkLjAeFw0yMTA1MDgxNTM2MjFaFw0yMjA1MDgxNTM2NDFaMBwxGjAY
                BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
                QgAEpOZnhrwXSVgtfgl+R5KXfbkQ3yhtGZ8a/dv0xyxzevPDxMKnDkP6ooidEIpE
                4zErthAOCiGN8PX30gnDwIU3MKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
                MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
                BBRkDrVvNrJLsU39bnqC78uU2Kw1bDAKBggqhkjOPQQDAgNJADBGAiEAjqqaZGlH
                9mUr76y/qRH4FBg9SdLxPc5tbIjQBz5hIsoCIQCwAz7I+kfBcKQdtZucmF/Afqrv
                1MQT585MbDgYfR/d2A==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: cr.l5d.io/linkerd/proxy:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191"
            - --outbound-ports-to-ignore
            - "443"
          image: cr.l5d.io/linkerd/proxy-init:v1.3.11
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - name: tls
          secret:
            secretName: linkerd-proxy-injector-k8s-tls
        - emptyDir: { }
          name: linkerd-proxy-init-xtables-lock
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
    - name: proxy-injector
      port: 443
      targetPort: proxy-injector
---
###
### Service Profile Validator
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: sp-validator
  ports:
    - name: sp-validator
      port: 443
      targetPort: sp-validator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.10.2
  labels:
    app.kubernetes.io/name: sp-validator
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.10.2
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-sp-validator
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: sp-validator
  template:
    metadata:
      annotations:
        checksum/config: 71b0bb340e0206fc201013e4836897b7c821b96244fc7a328204163e4d273330
        linkerd.io/created-by: linkerd/cli stable-2.10.2
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.10.2
      labels:
        linkerd.io/control-plane-component: sp-validator
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-sp-validator
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
        - args:
            - sp-validator
            - -log-level=info
            - -log-format=plain
          image: cr.l5d.io/linkerd/controller:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9997
            initialDelaySeconds: 10
          name: sp-validator
          ports:
            - containerPort: 8443
              name: sp-validator
            - containerPort: 9997
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9997
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: "warn,linkerd=info"
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: "plain"
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: "100ms"
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: "1000ms"
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
              value: "25,443,587,3306,5432,11211"
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
                eS5saW5rZXJkLjAeFw0yMTA1MDgxNTM2MjFaFw0yMjA1MDgxNTM2NDFaMBwxGjAY
                BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
                QgAEpOZnhrwXSVgtfgl+R5KXfbkQ3yhtGZ8a/dv0xyxzevPDxMKnDkP6ooidEIpE
                4zErthAOCiGN8PX30gnDwIU3MKNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
                MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
                BBRkDrVvNrJLsU39bnqC78uU2Kw1bDAKBggqhkjOPQQDAgNJADBGAiEAjqqaZGlH
                9mUr76y/qRH4FBg9SdLxPc5tbIjQBz5hIsoCIQCwAz7I+kfBcKQdtZucmF/Afqrv
                1MQT585MbDgYfR/d2A==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: cr.l5d.io/linkerd/proxy:stable-2.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - "4190,4191"
            - --outbound-ports-to-ignore
            - "443"
          image: cr.l5d.io/linkerd/proxy-init:v1.3.11
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /run
              name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-sp-validator
      volumes:
        - name: tls
          secret:
            secretName: linkerd-sp-validator-k8s-tls
        - emptyDir: { }
          name: linkerd-proxy-init-xtables-lock
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgY3J0RXhwaXJ5OiAiMjAyMi0wNS0wOFQxNTozNjo0MVoiCiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMakFlRncweU1UQTFNRGd4TlRNMk1qRmFGdzB5TWpBMU1EZ3hOVE0yTkRGYU1Cd3hHakFZCiAgICAgICAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogICAgICAgIFFnQUVwT1puaHJ3WFNWZ3RmZ2wrUjVLWGZia1EzeWh0R1o4YS9kdjB4eXh6ZXZQRHhNS25Ea1A2b29pZEVJcEUKICAgICAgICA0ekVydGhBT0NpR044UFgzMGduRHdJVTNNS05oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgICAgICAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogICAgICAgIEJCUmtEclZ2TnJKTHNVMzlibnFDNzh1VTJLdzFiREFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBanFxYVpHbEgKICAgICAgICA5bVVyNzZ5L3FSSDRGQmc5U2RMeFBjNXRiSWpRQno1aElzb0NJUUN3QXo3SStrZkJjS1FkdFp1Y21GL0FmcXJ2CiAgICAgICAgMU1RVDU4NU1iRGdZZlIvZDJBPT0KICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSVBXWVNWeTZQeTlkeSt1MVdHOTNFOVd4OUVHWFFIYWhvOVB2Z1ZReXZvYWVvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVwT1puaHJ3WFNWZ3RmZ2wrUjVLWGZia1EzeWh0R1o4YS9kdjB4eXh6ZXZQRHhNS25Ea1A2CiAgICAgICAgb29pZEVJcEU0ekVydGhBT0NpR044UFgzMGduRHdJVTNNQT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU1UQTFNRGd4TlRNMk1qRmFGdzB5TWpBMU1EZ3hOVE0yTkRGYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVwT1puaHJ3WFNWZ3RmZ2wrUjVLWGZia1EzeWh0R1o4YS9kdjB4eXh6ZXZQRHhNS25Ea1A2b29pZEVJcEUKICA0ekVydGhBT0NpR044UFgzMGduRHdJVTNNS05oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCUmtEclZ2TnJKTHNVMzlibnFDNzh1VTJLdzFiREFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBanFxYVpHbEgKICA5bVVyNzZ5L3FSSDRGQmc5U2RMeFBjNXRiSWpRQno1aElzb0NJUUN3QXo3SStrZkJjS1FkdFp1Y21GL0FmcXJ2CiAgMU1RVDU4NU1iRGdZZlIvZDJBPT0KICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
