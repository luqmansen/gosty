apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gosty-web
  name: gosty-web
  namespace: gosty
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: gosty-web
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: gosty-web
    spec:
      serviceAccountName: pod-service-access
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: topology.kubernetes.io/hostname
              weight: 100
      containers:
        - command: [ './sed.sh' ]
          image: luqmansen/gosty-web:latest
          imagePullPolicy: Always
          name: gosty-web
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-service-access
  namespace: gosty
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: read-services
rules:
  - apiGroups: [ "" ]
    resources: [ "services" ]
    verbs: [ "get", "watch", "list" ]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-services
  namespace: gosty
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: read-services
subjects:
  - kind: ServiceAccount
    name: pod-service-access
    namespace: gosty

#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: gosty-web
#  namespace: gosty
#spec:
#  type: NodePort
#  selector:
#    app: gosty-web
#  ports:
#    - port: 80
#      targetPort: 80
#      nodePort: 30002
#
#---
